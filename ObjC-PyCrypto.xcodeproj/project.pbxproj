// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		FA06A78B16AC51B900E53D88 /* CHANGELOG.md in Resources */ = {isa = PBXBuildFile; fileRef = FA06A78716AC51B900E53D88 /* CHANGELOG.md */; };
		FA06A78C16AC51B900E53D88 /* JSONKit.m in Sources */ = {isa = PBXBuildFile; fileRef = FA06A78916AC51B900E53D88 /* JSONKit.m */; };
		FA06A78D16AC51B900E53D88 /* README.md in Resources */ = {isa = PBXBuildFile; fileRef = FA06A78A16AC51B900E53D88 /* README.md */; };
		FA0B40D516AE9E6A001577CA /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = FA0B40D316AE9E6A001577CA /* InfoPlist.strings */; };
		FA0B40F416AE9ED7001577CA /* AES.c in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A116AE949D00C6123F /* AES.c */; };
		FA0B40F516AE9EDB001577CA /* AESCipher.m in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A316AE949D00C6123F /* AESCipher.m */; };
		FA0B40F616AE9EDD001577CA /* AESCryptoHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A816AE94A900C6123F /* AESCryptoHelper.m */; };
		FA0B40F716AE9EE1001577CA /* AESCipher.h in Headers */ = {isa = PBXBuildFile; fileRef = FA9A83A216AE949D00C6123F /* AESCipher.h */; settings = {ATTRIBUTES = (Public, ); }; };
		FA0B40F816AE9EE4001577CA /* AESCryptoHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = FA9A83A716AE94A900C6123F /* AESCryptoHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
		FA425A6816A6A716004B450C /* LICENSE in Resources */ = {isa = PBXBuildFile; fileRef = FA425A6716A6A716004B450C /* LICENSE */; };
		FA5A5DB8153F2386004686C5 /* OCHamcrest.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = FA5A5DB6153F2313004686C5 /* OCHamcrest.framework */; };
		FA5A5DBD153F2556004686C5 /* OCHamcrest.framework in CopyFiles */ = {isa = PBXBuildFile; fileRef = FA5A5DB6153F2313004686C5 /* OCHamcrest.framework */; };
		FA9A83A416AE949D00C6123F /* AES.c in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A116AE949D00C6123F /* AES.c */; };
		FA9A83A616AE949D00C6123F /* AESCipher.m in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A316AE949D00C6123F /* AESCipher.m */; };
		FA9A83AA16AE94A900C6123F /* AESCryptoHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = FA9A83A816AE94A900C6123F /* AESCryptoHelper.m */; };
		FA9A83B716AE94CA00C6123F /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = FA9A83B516AE94CA00C6123F /* InfoPlist.strings */; };
		FA9A83B916AE960F00C6123F /* Info-OSX.plist in Resources */ = {isa = PBXBuildFile; fileRef = FA9A83B016AE94BD00C6123F /* Info-OSX.plist */; };
		FA9A83C616AE9B1F00C6123F /* AESCryptoHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = FA9A83A716AE94A900C6123F /* AESCryptoHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
		FA9A83C716AE9B2200C6123F /* AESCipher.h in Headers */ = {isa = PBXBuildFile; fileRef = FA9A83A216AE949D00C6123F /* AESCipher.h */; settings = {ATTRIBUTES = (Public, ); }; };
		FAB73CB41523635E00830720 /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = FAB73CB31523635E00830720 /* SenTestingKit.framework */; };
		FAB73CB81523635E00830720 /* ObjC-PyCryptoOSX.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = FAB73C9A1523635E00830720 /* ObjC-PyCryptoOSX.framework */; };
		FAB73CBE1523635E00830720 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = FAB73CBC1523635E00830720 /* InfoPlist.strings */; };
		FAB73CD3152363B400830720 /* AESCryptoHelperTest.m in Sources */ = {isa = PBXBuildFile; fileRef = FAB73CD2152363B400830720 /* AESCryptoHelperTest.m */; };
		FAB73CEB1523678500830720 /* libz.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = FAB73CEA1523678500830720 /* libz.dylib */; };
		FAB73CEC1523687600830720 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = FAB73CA21523635E00830720 /* Foundation.framework */; };
		FAB73CED1523687D00830720 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = FAB73CA21523635E00830720 /* Foundation.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		FAB73CB61523635E00830720 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = FAB73C901523635D00830720 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FAB73C991523635E00830720;
			remoteInfo = PYCrypto;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		FA5A5DBC153F254F004686C5 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 16;
			files = (
				FA5A5DBD153F2556004686C5 /* OCHamcrest.framework in CopyFiles */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		FA06A78716AC51B900E53D88 /* CHANGELOG.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = CHANGELOG.md; sourceTree = "<group>"; };
		FA06A78816AC51B900E53D88 /* JSONKit.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = JSONKit.h; sourceTree = "<group>"; };
		FA06A78916AC51B900E53D88 /* JSONKit.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = JSONKit.m; sourceTree = "<group>"; };
		FA06A78A16AC51B900E53D88 /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = README.md; sourceTree = "<group>"; };
		FA06A78E16AC51D900E53D88 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = text; path = README.md; sourceTree = "<group>"; };
		FA0B40CF16AE9E6A001577CA /* ObjC-PyCryptoIOS.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "ObjC-PyCryptoIOS.framework"; sourceTree = BUILT_PRODUCTS_DIR; };
		FA0B40D216AE9E6A001577CA /* ObjC-PyCryptoIOS-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "ObjC-PyCryptoIOS-Info.plist"; sourceTree = "<group>"; };
		FA0B40D416AE9E6A001577CA /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		FA0B40D616AE9E6A001577CA /* ObjC-PyCryptoIOS-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "ObjC-PyCryptoIOS-Prefix.pch"; sourceTree = "<group>"; };
		FA0B40DD16AE9E6A001577CA /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		FA0B40DF16AE9E6A001577CA /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		FA425A6716A6A716004B450C /* LICENSE */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		FA5A5DB6153F2313004686C5 /* OCHamcrest.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = OCHamcrest.framework; path = Libraries/OCHamcrest.framework; sourceTree = "<group>"; };
		FA9A83A116AE949D00C6123F /* AES.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = AES.c; path = Sources/AES.c; sourceTree = SOURCE_ROOT; };
		FA9A83A216AE949D00C6123F /* AESCipher.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AESCipher.h; path = Sources/AESCipher.h; sourceTree = SOURCE_ROOT; };
		FA9A83A316AE949D00C6123F /* AESCipher.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AESCipher.m; path = Sources/AESCipher.m; sourceTree = SOURCE_ROOT; };
		FA9A83A716AE94A900C6123F /* AESCryptoHelper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AESCryptoHelper.h; path = Sources/AESCryptoHelper.h; sourceTree = SOURCE_ROOT; };
		FA9A83A816AE94A900C6123F /* AESCryptoHelper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AESCryptoHelper.m; path = Sources/AESCryptoHelper.m; sourceTree = SOURCE_ROOT; };
		FA9A83B016AE94BD00C6123F /* Info-OSX.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "Info-OSX.plist"; path = "Resources/Info-OSX.plist"; sourceTree = SOURCE_ROOT; };
		FA9A83B116AE94BD00C6123F /* Prefix.pch */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Prefix.pch; path = Resources/Prefix.pch; sourceTree = SOURCE_ROOT; };
		FA9A83B616AE94CA00C6123F /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = Resources/en.lproj/InfoPlist.strings; sourceTree = SOURCE_ROOT; };
		FAB73C9A1523635E00830720 /* ObjC-PyCryptoOSX.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = "ObjC-PyCryptoOSX.framework"; sourceTree = BUILT_PRODUCTS_DIR; };
		FAB73CA21523635E00830720 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		FAB73CB21523635E00830720 /* ObjC-PyCryptoTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "ObjC-PyCryptoTests.octest"; sourceTree = BUILT_PRODUCTS_DIR; };
		FAB73CB31523635E00830720 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		FAB73CBB1523635E00830720 /* ObjC-PYCryptoTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "ObjC-PYCryptoTests-Info.plist"; sourceTree = "<group>"; };
		FAB73CBD1523635E00830720 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		FAB73CD2152363B400830720 /* AESCryptoHelperTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AESCryptoHelperTest.m; sourceTree = "<group>"; };
		FAB73CE91523667F00830720 /* ObjC-PYCryptoTest-Prefix.pch */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "ObjC-PYCryptoTest-Prefix.pch"; sourceTree = "<group>"; };
		FAB73CEA1523678500830720 /* libz.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libz.dylib; path = usr/lib/libz.dylib; sourceTree = SDKROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		FA0B40C916AE9E6A001577CA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73C961523635E00830720 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FAB73CEC1523687600830720 /* Foundation.framework in Frameworks */,
				FAB73CEB1523678500830720 /* libz.dylib in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73CAE1523635E00830720 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA5A5DB8153F2386004686C5 /* OCHamcrest.framework in Frameworks */,
				FAB73CED1523687D00830720 /* Foundation.framework in Frameworks */,
				FAB73CB81523635E00830720 /* ObjC-PyCryptoOSX.framework in Frameworks */,
				FAB73CB41523635E00830720 /* SenTestingKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		FA06A78616AC51B900E53D88 /* JSONKit */ = {
			isa = PBXGroup;
			children = (
				FA06A78716AC51B900E53D88 /* CHANGELOG.md */,
				FA06A78816AC51B900E53D88 /* JSONKit.h */,
				FA06A78916AC51B900E53D88 /* JSONKit.m */,
				FA06A78A16AC51B900E53D88 /* README.md */,
			);
			name = JSONKit;
			path = ThirdParty/JSONKit;
			sourceTree = SOURCE_ROOT;
		};
		FA06A7F316AC5B6400E53D88 /* Helper */ = {
			isa = PBXGroup;
			children = (
				FA9A83A716AE94A900C6123F /* AESCryptoHelper.h */,
				FA9A83A816AE94A900C6123F /* AESCryptoHelper.m */,
			);
			name = Helper;
			sourceTree = "<group>";
		};
		FA06A7F416AC5B6E00E53D88 /* Cipher */ = {
			isa = PBXGroup;
			children = (
				FA9A83A116AE949D00C6123F /* AES.c */,
				FA9A83A216AE949D00C6123F /* AESCipher.h */,
				FA9A83A316AE949D00C6123F /* AESCipher.m */,
			);
			name = Cipher;
			sourceTree = "<group>";
		};
		FA0B40D016AE9E6A001577CA /* ObjC-PyCryptoIOS */ = {
			isa = PBXGroup;
			children = (
				FA0B40D116AE9E6A001577CA /* Supporting Files */,
			);
			path = "ObjC-PyCryptoIOS";
			sourceTree = "<group>";
		};
		FA0B40D116AE9E6A001577CA /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				FA0B40D216AE9E6A001577CA /* ObjC-PyCryptoIOS-Info.plist */,
				FA0B40D316AE9E6A001577CA /* InfoPlist.strings */,
				FA0B40D616AE9E6A001577CA /* ObjC-PyCryptoIOS-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		FA425A6616A69CD4004B450C /* Test Frameworks */ = {
			isa = PBXGroup;
			children = (
				FA5A5DB6153F2313004686C5 /* OCHamcrest.framework */,
				FAB73CB31523635E00830720 /* SenTestingKit.framework */,
			);
			name = "Test Frameworks";
			sourceTree = "<group>";
		};
		FAB73C8E1523635D00830720 = {
			isa = PBXGroup;
			children = (
				FAB73CA31523635E00830720 /* Sources */,
				FAB73CA41523635E00830720 /* Recources */,
				FAB73CB91523635E00830720 /* Tests */,
				FA0B40D016AE9E6A001577CA /* ObjC-PyCryptoIOS */,
				FAB73C9C1523635E00830720 /* Frameworks */,
				FAB73C9B1523635E00830720 /* Products */,
				FA425A6716A6A716004B450C /* LICENSE */,
				FA06A78E16AC51D900E53D88 /* README.md */,
			);
			sourceTree = "<group>";
		};
		FAB73C9B1523635E00830720 /* Products */ = {
			isa = PBXGroup;
			children = (
				FAB73C9A1523635E00830720 /* ObjC-PyCryptoOSX.framework */,
				FAB73CB21523635E00830720 /* ObjC-PyCryptoTests.octest */,
				FA0B40CF16AE9E6A001577CA /* ObjC-PyCryptoIOS.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		FAB73C9C1523635E00830720 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				FAB73CA21523635E00830720 /* Foundation.framework */,
				FAB73CEA1523678500830720 /* libz.dylib */,
				FA425A6616A69CD4004B450C /* Test Frameworks */,
				FA0B40DD16AE9E6A001577CA /* SenTestingKit.framework */,
				FA0B40DF16AE9E6A001577CA /* UIKit.framework */,
				FAB73C9F1523635E00830720 /* Other Frameworks */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		FAB73C9F1523635E00830720 /* Other Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = "Other Frameworks";
			sourceTree = "<group>";
		};
		FAB73CA31523635E00830720 /* Sources */ = {
			isa = PBXGroup;
			children = (
				FA06A7F416AC5B6E00E53D88 /* Cipher */,
				FA06A7F316AC5B6400E53D88 /* Helper */,
			);
			name = Sources;
			path = PYCrypto;
			sourceTree = "<group>";
		};
		FAB73CA41523635E00830720 /* Recources */ = {
			isa = PBXGroup;
			children = (
				FA9A83B516AE94CA00C6123F /* InfoPlist.strings */,
				FA9A83B016AE94BD00C6123F /* Info-OSX.plist */,
				FA9A83B116AE94BD00C6123F /* Prefix.pch */,
			);
			name = Recources;
			path = PYCrypto;
			sourceTree = "<group>";
		};
		FAB73CB91523635E00830720 /* Tests */ = {
			isa = PBXGroup;
			children = (
				FAB73CD2152363B400830720 /* AESCryptoHelperTest.m */,
				FA06A78616AC51B900E53D88 /* JSONKit */,
				FAB73CBA1523635E00830720 /* Supporting Files */,
			);
			name = Tests;
			path = PYCryptoTests;
			sourceTree = "<group>";
		};
		FAB73CBA1523635E00830720 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				FAB73CE91523667F00830720 /* ObjC-PYCryptoTest-Prefix.pch */,
				FAB73CBB1523635E00830720 /* ObjC-PYCryptoTests-Info.plist */,
				FAB73CBC1523635E00830720 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		FA0B40CA16AE9E6A001577CA /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA0B40F716AE9EE1001577CA /* AESCipher.h in Headers */,
				FA0B40F816AE9EE4001577CA /* AESCryptoHelper.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73C971523635E00830720 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA9A83C716AE9B2200C6123F /* AESCipher.h in Headers */,
				FA9A83C616AE9B1F00C6123F /* AESCryptoHelper.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		FA0B40CE16AE9E6A001577CA /* ObjC-PyCryptoIOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FA0B40F216AE9E6A001577CA /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoIOS" */;
			buildPhases = (
				FA0B40C716AE9E6A001577CA /* ShellScript */,
				FA0B40C816AE9E6A001577CA /* Sources */,
				FA0B40C916AE9E6A001577CA /* Frameworks */,
				FA0B40CA16AE9E6A001577CA /* Headers */,
				FA0B40CB16AE9E6A001577CA /* Resources */,
				FA0B40CC16AE9E6A001577CA /* ShellScript */,
				FA0B40CD16AE9E6A001577CA /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "ObjC-PyCryptoIOS";
			productName = "ObjC-PyCryptoIOS";
			productReference = FA0B40CF16AE9E6A001577CA /* ObjC-PyCryptoIOS.framework */;
			productType = "com.apple.product-type.bundle";
		};
		FAB73C991523635E00830720 /* ObjC-PyCryptoOSX */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FAB73CC41523635E00830720 /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoOSX" */;
			buildPhases = (
				FAB73C951523635E00830720 /* Sources */,
				FAB73C961523635E00830720 /* Frameworks */,
				FAB73C971523635E00830720 /* Headers */,
				FAB73C981523635E00830720 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "ObjC-PyCryptoOSX";
			productName = PYCrypto;
			productReference = FAB73C9A1523635E00830720 /* ObjC-PyCryptoOSX.framework */;
			productType = "com.apple.product-type.framework";
		};
		FAB73CB11523635E00830720 /* ObjC-PyCryptoTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FAB73CC71523635E00830720 /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoTests" */;
			buildPhases = (
				FAB73CAD1523635E00830720 /* Sources */,
				FAB73CAE1523635E00830720 /* Frameworks */,
				FAB73CAF1523635E00830720 /* Resources */,
				FAB73CB01523635E00830720 /* ShellScript */,
				FA5A5DBC153F254F004686C5 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
				FAB73CB71523635E00830720 /* PBXTargetDependency */,
			);
			name = "ObjC-PyCryptoTests";
			productName = PYCryptoTests;
			productReference = FAB73CB21523635E00830720 /* ObjC-PyCryptoTests.octest */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		FAB73C901523635D00830720 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0430;
				ORGANIZATIONNAME = "Alexander Lehnert";
			};
			buildConfigurationList = FAB73C931523635D00830720 /* Build configuration list for PBXProject "ObjC-PyCrypto" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = FAB73C8E1523635D00830720;
			productRefGroup = FAB73C9B1523635E00830720 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				FAB73C991523635E00830720 /* ObjC-PyCryptoOSX */,
				FA0B40CE16AE9E6A001577CA /* ObjC-PyCryptoIOS */,
				FAB73CB11523635E00830720 /* ObjC-PyCryptoTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		FA0B40CB16AE9E6A001577CA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA0B40D516AE9E6A001577CA /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73C981523635E00830720 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA425A6816A6A716004B450C /* LICENSE in Resources */,
				FA9A83B716AE94CA00C6123F /* InfoPlist.strings in Resources */,
				FA9A83B916AE960F00C6123F /* Info-OSX.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73CAF1523635E00830720 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FAB73CBE1523635E00830720 /* InfoPlist.strings in Resources */,
				FA06A78B16AC51B900E53D88 /* CHANGELOG.md in Resources */,
				FA06A78D16AC51B900E53D88 /* README.md in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		FA0B40C716AE9E6A001577CA /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n   [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n";
		};
		FA0B40CC16AE9E6A001577CA /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
			showEnvVarsInLog = 0;
		};
		FA0B40CD16AE9E6A001577CA /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\n\n# Make sure the other platform gets built\n\necho \"Build other platform\"\n\necho xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\nxcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n\n\n# Build the fat static library binary\n\necho \"Create universal static library\"\n\necho \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n\"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n\necho mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nmv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n\n\n# Build framework structure\n\necho \"Build symlinks\"\n\necho ln -sfh A \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Versions/Current\"\nln -sfh A \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Versions/Current\"\necho ln -sfh Versions/Current/Headers \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Headers\"\nln -sfh Versions/Current/Headers \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Headers\"\necho ln -sfh Versions/Current/Resources \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Resources\"\nln -sfh Versions/Current/Resources \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/Resources\"\necho ln -sfh \"Versions/Current/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${EXECUTABLE_NAME}\"\nln -sfh \"Versions/Current/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${EXECUTABLE_NAME}\"\n\n\n# Link to binary for unit tests\n\nmkdir -p \"${BUILT_PRODUCTS_DIR}/.fake_fw_testing.framework\"\nln -sfh \"../${WRAPPER_NAME}/${EXECUTABLE_NAME}\" \"${BUILT_PRODUCTS_DIR}/.fake_fw_testing.framework/.fake_fw_testing\"\n\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\n# Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n\necho \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n\necho rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nrm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\necho cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\ncp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n";
			showEnvVarsInLog = 0;
		};
		FAB73CB01523635E00830720 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		FA0B40C816AE9E6A001577CA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA0B40F416AE9ED7001577CA /* AES.c in Sources */,
				FA0B40F516AE9EDB001577CA /* AESCipher.m in Sources */,
				FA0B40F616AE9EDD001577CA /* AESCryptoHelper.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73C951523635E00830720 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FA9A83A416AE949D00C6123F /* AES.c in Sources */,
				FA9A83A616AE949D00C6123F /* AESCipher.m in Sources */,
				FA9A83AA16AE94A900C6123F /* AESCryptoHelper.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FAB73CAD1523635E00830720 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FAB73CD3152363B400830720 /* AESCryptoHelperTest.m in Sources */,
				FA06A78C16AC51B900E53D88 /* JSONKit.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		FAB73CB71523635E00830720 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FAB73C991523635E00830720 /* ObjC-PyCryptoOSX */;
			targetProxy = FAB73CB61523635E00830720 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		FA0B40D316AE9E6A001577CA /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				FA0B40D416AE9E6A001577CA /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		FA9A83B516AE94CA00C6123F /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				FA9A83B616AE94CA00C6123F /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		FAB73CBC1523635E00830720 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				FAB73CBD1523635E00830720 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		FA0B40EE16AE9E6A001577CA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "ObjC-PyCryptoIOS/ObjC-PyCryptoIOS-Prefix.pch";
				INFOPLIST_FILE = "ObjC-PyCryptoIOS/ObjC-PyCryptoIOS-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				ONLY_ACTIVE_ARCH = NO;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		FA0B40EF16AE9E6A001577CA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "ObjC-PyCryptoIOS/ObjC-PyCryptoIOS-Prefix.pch";
				INFOPLIST_FILE = "ObjC-PyCryptoIOS/ObjC-PyCryptoIOS-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				ONLY_ACTIVE_ARCH = NO;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		FAB73CC21523635E00830720 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.7;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = macosx;
			};
			name = Debug;
		};
		FAB73CC31523635E00830720 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.7;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = macosx;
			};
			name = Release;
		};
		FAB73CC51523635E00830720 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = Resources/Prefix.pch;
				GCC_PREPROCESSOR_DEFINITIONS = "DEBUG=1";
				INFOPLIST_FILE = "Resources/Info-OSX.plist";
				PRODUCT_NAME = "ObjC-PyCryptoOSX";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		FAB73CC61523635E00830720 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = Resources/Prefix.pch;
				GCC_PREPROCESSOR_DEFINITIONS = "";
				INFOPLIST_FILE = "Resources/Info-OSX.plist";
				PRODUCT_NAME = "ObjC-PyCryptoOSX";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		FAB73CC81523635E00830720 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(DEVELOPER_LIBRARY_DIR)/Frameworks",
					"\"$(SRCROOT)\"",
					"\"$(SRCROOT)/Libraries\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "PYCryptoTests/ObjC-PYCryptoTest-Prefix.pch";
				HEADER_SEARCH_PATHS = "$(SRCROOT)/Libraries/**";
				INFOPLIST_FILE = "";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"$(SRCROOT)\"",
				);
				OTHER_LDFLAGS = "";
				PRODUCT_NAME = "ObjC-PyCryptoTests";
				USER_HEADER_SEARCH_PATHS = "$(SRCROOT)/Libraries/**";
				WRAPPER_EXTENSION = octest;
			};
			name = Debug;
		};
		FAB73CC91523635E00830720 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(DEVELOPER_LIBRARY_DIR)/Frameworks",
					"\"$(SRCROOT)\"",
					"\"$(SRCROOT)/Libraries\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "PYCryptoTests/ObjC-PYCryptoTest-Prefix.pch";
				HEADER_SEARCH_PATHS = "$(SRCROOT)/Libraries/**";
				INFOPLIST_FILE = "";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"$(SRCROOT)\"",
				);
				OTHER_LDFLAGS = "";
				PRODUCT_NAME = "ObjC-PyCryptoTests";
				USER_HEADER_SEARCH_PATHS = "$(SRCROOT)/Libraries/**";
				WRAPPER_EXTENSION = octest;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		FA0B40F216AE9E6A001577CA /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoIOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FA0B40EE16AE9E6A001577CA /* Debug */,
				FA0B40EF16AE9E6A001577CA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		FAB73C931523635D00830720 /* Build configuration list for PBXProject "ObjC-PyCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FAB73CC21523635E00830720 /* Debug */,
				FAB73CC31523635E00830720 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		FAB73CC41523635E00830720 /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoOSX" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FAB73CC51523635E00830720 /* Debug */,
				FAB73CC61523635E00830720 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		FAB73CC71523635E00830720 /* Build configuration list for PBXNativeTarget "ObjC-PyCryptoTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FAB73CC81523635E00830720 /* Debug */,
				FAB73CC91523635E00830720 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = FAB73C901523635D00830720 /* Project object */;
}
